---
- name: Step 004 software
  hosts: localhost
  gather_facts: false
  become: false
  tags:
    - step004_01
    - software
  tasks:
    - name: Print stage
      ansible.builtin.debug:
        msg: "Software tasks Started"

- name: Configure gitea server
  hosts: gitlab
  become: true
  tasks:
    - name: Inlcude gitea deployment tasks
      ansible.builtin.include_tasks: ./deploy_gitea.yml


- name: Install softwares on bastion
  hosts: bastions
  become: true
  tags:
    - step004_02
    - software
  pre_tasks:
    - name: Configure git client
      ansible.builtin.include_role:
        name: ansible.workshops.gitlab_client

    - name: Add control host in automationcontroller group
      ansible.builtin.add_host:
        name: "{{ groups['bastions'][0] }}"
        groups: automationcontroller

  tasks:
    - name: Install Automation controller
      when: install_automationcontroller | bool
      block:
        - name: Install automation controller from role
          ansible.builtin.include_role:
            name: deploy_automationcontroller

        - name: Clean up
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop:
            - "/tmp/automationcontroller_installer"
            - "/tmp/automationcontroller.tar.gz"

        - name: Enable offline automation controller repo
          community.general.ini_file:
            path: "/etc/yum.repos.d/*.repo"
            section: ansible-automation-platform
            option: enabled
            value: 1

        - name: Install ansible core & navigator
          ansible.builtin.dnf:
            name:
              - ansible-core
              - ansible-navigator
            state: present

        - name: Copy ansible-navigator file
          ansible.builtin.copy:
            src: ./files/ansible-navigator.yml
            dest: "/home/{{ student_name }}/.ansible-navigator.yml"
            owner: "{{ student_name }}"
            group: "{{ student_name }}"
            mode: '0644'

        - name: Include automation configuration loader
          when: configure_automationcontroller | bool
          ansible.builtin.include_role:
            name: automation_platform_loader

        - name: Include cert generator
          when: enable_letsencyrpt_cert | bool
          ansible.builtin.include_role:
            name: aap_controller_cert_issue

    - name: Vscode configuration block
      when: install_vscode_server | bool
      block:
        - name: Install vscode server
          ansible.builtin.include_role:
            name: vscode-server

        - name: Clean up
          ansible.builtin.file:
            path: "/tmp/code-server.rpm"
            state: absent

        - name: Insert vscode proxy conf in nginx
          when: install_automationcontroller | bool
          ansible.builtin.blockinfile:
            path: /etc/nginx/conf.d/automation-controller.nginx.conf
            marker: "    # ANSIBLE MANAGED BLOCK"
            insertbefore: '.*location \/ \{.*'
            block: "{{ lookup('file', './files/vscode_nginx.conf') }}"

        - name: Restart nginx
          when: install_automationcontroller | bool
          ansible.builtin.service:
            name: nginx
            state: restarted

    - name: Include workshop content deployer
      ansible.builtin.include_tasks:
        file: ./deploy_workshop_content.yml

- name: Software flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  tags:
    - step004_03
    - software
  tasks:
    - name: Print stage
      ansible.builtin.debug:
        msg: "Software checks completed successfully"
